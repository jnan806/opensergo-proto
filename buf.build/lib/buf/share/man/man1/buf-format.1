.nh
.TH "Buf" "1" "Sep 2022" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
buf-format - Format all Protobuf files from the specified input and output the result.


.SH SYNOPSIS
.PP
\fBbuf format  [flags]\fP


.SH DESCRIPTION
.PP
Format all Protobuf files from the specified input and output the result.

.PP
By default, the input is the current directory and the formatted content is written to stdout. For example,


.SH Write the current directory's formatted content to stdout
.PP
$ buf format

.PP
Rewrite the file(s) in-place with -w. For example,


.SH Rewrite the files defined in the current directory in-place
.PP
$ buf format -w

.PP
Most people will want to use 'buf format -w'.

.PP
Display a diff between the original and formatted content with -d. For example,


.SH Write a diff instead of the formatted file
.PP
$ buf format simple/simple.proto -d
diff -u simple/simple.proto.orig simple/simple.proto
--- simple/simple.proto.orig	2022-03-24 09:44:10.000000000 -0700
+++ simple/simple.proto	2022-03-24 09:44:10.000000000 -0700
@@ -2,8 +2,7 @@

.PP
package simple;

.PP
-
 message Object {
-    string key = 1;
-   bytes value = 2;
+  string key = 1;
+  bytes value = 2;
 }

.PP
You can also use the --exit-code flag to exit with a non-zero exit code if there is a diff:

.PP
$ buf format --exit-code
$ buf format -w --exit-code
$ buf format -d --exit-code

.PP
Format a file, directory, or module reference by specifying an input. For example,


.SH Write the formatted file to stdout
.PP
$ buf format simple/simple.proto
syntax = "proto3";

.PP
package simple;

.PP
message Object {
  string key = 1;
  bytes value = 2;
}


.SH Write the formatted directory to stdout
.PP
$ buf format simple
...


.SH Write the formatted module reference to stdout
.PP
$ buf format buf.build/acme/petapis
...

.PP
Write the result to a specified output file or directory with -o. For example,


.SH Write the formatted file to another file
.PP
$ buf format simple/simple.proto -o simple/simple.formatted.proto


.SH Write the formatted directory to another directory, creating it if it doesn't exist
.PP
$ buf format proto -o formatted


.SH This also works with module references
.PP
$ buf format buf.build/acme/weather -o formatted

.PP
Rewrite the file(s) in-place with -w. For example,


.SH Rewrite a single file in-place
.PP
$ buf format simple.proto -w


.SH Rewrite an entire directory in-place
.PP
$ buf format proto -w


.SH Write a diff and rewrite the file(s) in-place
.PP
$ buf format simple -d -w
diff -u simple/simple.proto.orig simple/simple.proto
...

.PP
The -w and -o flags cannot be used together in a single invocation.


.SH OPTIONS
.PP
\fB--config\fP=""
	The file or data to use for configuration.

.PP
\fB-d\fP, \fB--diff\fP[=false]
	Display diffs instead of rewriting files.

.PP
\fB--disable-symlinks\fP[=false]
	Do not follow symlinks when reading sources or configuration from the local filesystem.
By default, symlinks are followed in this CLI, but never followed on the Buf Schema Registry.
Symlinks are never followed in Windows.

.PP
\fB--error-format\fP="text"
	The format for build errors printed to stderr. Must be one of [text,json,msvs,junit].

.PP
\fB--exclude-path\fP=[]
	Exclude specific files or directories, for example "proto/a/a.proto" or "proto/a".
If specified multiple times, the union is taken.

.PP
\fB--exit-code\fP[=false]
	Exit with a non-zero exit code if files were not already formatted.

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for format

.PP
\fB-o\fP, \fB--output\fP="-"
	The output location for the formatted files. Must be one of format [dir,git,protofile,tar,zip]. If omitted, the result is written to stdout.

.PP
\fB--path\fP=[]
	Limit to specific files or directories, for example "proto/a/a.proto" or "proto/a".
If specified multiple times, the union is taken.

.PP
\fB-w\fP, \fB--write\fP[=false]
	Rewrite files in-place.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--debug\fP[=false]
	Turn on debug logging.

.PP
\fB--log-format\fP="color"
	The log format [text,color,json].

.PP
\fB--timeout\fP=2m0s
	The duration until timing out.

.PP
\fB-v\fP, \fB--verbose\fP[=false]
	Turn on verbose mode.


.SH SEE ALSO
.PP
\fBbuf(1)\fP


.SH HISTORY
.PP
14-Sep-2022 Auto generated by spf13/cobra
