.nh
.TH "Buf" "1" "Sep 2022" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
buf-beta-convert - Use a source reference to convert a binary or JSON serialized message supplied through stdin or the input flag.


.SH SYNOPSIS
.PP
\fBbuf beta convert  [flags]\fP


.SH DESCRIPTION
.PP
Use a source reference to convert a binary or JSON serialized message supplied through stdin or the input flag.

.PP
The first argument is the source that defines the serialized message (like buf.build/acme/weather).
Alternatively, you can omit the source and specify a fully qualified path for the type using the --type option (like buf.build/acme/weather#acme.weather.v1.Units).


.SH OPTIONS
.PP
\fB--error-format\fP="text"
	The format for build errors printed to stderr. Must be one of [text,json,msvs,junit].

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for convert

.PP
\fB--input\fP="-"
	The location to read the input message. Must be one of format [bin,json].

.PP
\fB-o\fP, \fB--output\fP="-"
	The location to write the converted result to. Must be one of format [bin,json].

.PP
\fB--type\fP=""
	The full type name of the serialized message (like acme.weather.v1.Units).
Alternatively, this can be a fully qualified path to the type without providing the source (like buf.build/acme/weather#acme.weather.v1.Units).


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--debug\fP[=false]
	Turn on debug logging.

.PP
\fB--log-format\fP="color"
	The log format [text,color,json].

.PP
\fB--timeout\fP=2m0s
	The duration until timing out.

.PP
\fB-v\fP, \fB--verbose\fP[=false]
	Turn on verbose mode.


.SH SEE ALSO
.PP
\fBbuf-beta(1)\fP


.SH HISTORY
.PP
14-Sep-2022 Auto generated by spf13/cobra
